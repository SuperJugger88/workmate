# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  web:
    image: caddy:2.9.1-alpine
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    develop:
      watch:
        - action: sync+restart
          path: .docker/conf
          target: /etc/caddy
    volumes:
      - ./.docker/conf:/etc/caddy
      - caddy_data:/data
      - caddy_config:/config
  app:
    build:
      dockerfile: .docker/app.Dockerfile
      context: .
      target: final
    env_file:
      - .env
    develop:
      watch:
        - action: rebuild
          path: .
          ignore:
            - .dockerignore
            - .env.example
            - .gitignore
            - .github
            - README.md
            - LICENSE
            - .docker/conf
            - docs
            - tests
    depends_on:
      db:
        condition: service_healthy
  db:
   image: postgres:17-alpine
   restart: always
   user: postgres
   volumes:
     - db-data:/var/lib/postgresql/data
   environment:
     - POSTGRES_DB=${DB_NAME}
     - POSTGRES_PASSWORD=${DB_PASSWORD}
   ports:
     - '127.0.0.1:5432:5432'
   healthcheck:
     test: [ "CMD", "pg_isready" ]
     interval: 10s
     timeout: 5s
     retries: 5
  swagger-ui:
    image: swaggerapi/swagger-ui:v5.20.2
    environment:
      SWAGGER_JSON: /oas/swagger.json
    develop:
      watch:
        - action: sync+restart
          path: docs
          target: /oas
    volumes:
      - ./docs:/oas

volumes:
  db-data:
  caddy_data:
  caddy_config:

